			     EE 109  - Fall 2023
				  Thermostat


Review Question 1 (Cost Analysis):

Assume we are building 1000 units of this system.  Use the provided part
numbers (see the webpage) and the digikey.com or jameco.com website to find the
total **cost per unit** (again assume we build a quantity of 1000 units) for
these thermostats.  Itemize the part costs (list each part and its unit cost
when bought in units of 1000) and then show the final cost per unit below.
Note: You only need to price the components used in the project (not all the
components in your lab kit.  Also, you do not need to account for the cost of
the circuit board or wires. In a real environment we would manufacture a PCB
(Printed Circuit Board). As an optional task, you can search online for PCB
manufacturers and what the costs and options are in creating a PCB.

PER UNIT COSTS: some are cheaper because of bulk orders
Arduino Uno: $25.95
LCD Shield: $8.95
Resistors: not even 1 cent for 4 resistors
Pushbuttons: 12 cents, for two: 24 cents
Rotary Encoder: 70 cents
Buzzer: $1.75 
Servo Motor: $4.29
RGB LED: 22 cents
Temperature Sensor: $4.49

SINGLE UNIT COST: $46.60
FOR 1000 UNITS: $46,600


Review Question 2 (Health/Safety/Reliability)

Assume this system was to be sold to consumers for use at their home.

Considering reliability, health, and safety...

 - What scenarios might you suggest testing (considering both HW and SW) 
    before releasing the product for use? 
Hardware testing: want to make sure the sensor accurately tests the temperature, product can always work physically (different climates and drop tests), power is consistent

Software testing: user interface is consistent (printing on screen/sensing buttons and temperatures), run the product for a long time to make sure it is built for long-term use

 - How might you make your design more reliable? By reliability we don't just
   mean keeping it running correctly (though you should consider that), but
   also how you can detect that a connected component has failed to gracefully
   handle such situations.  You can consider both HW and SW points of failure,
   issues related to the operational environment, etc. and how to mitigate
   those cases.
Use good quality parts so it lasts a long time and is reliable, rewire it to make it easy to maintain/clean, make replacing the parts easy, regularly update the software to fix any bugs, use two temperature senors to make sure its correct, send clear error messages when something goes wrong, safety features to protect wires and users.




